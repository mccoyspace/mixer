#!/usr/bin/env python3

import random

subjectSing=["angel",
"crown",
"earth",
"lion",
"fire",
"demon",
"death",
"goat",
"horse",
"locust",
"mankind",
"mouth",
"plague",
"river",
"scorpion",
"serpent",
"star",
"sun",
"tree",
"trumpet",
"smell",
"you",
'abyss', 
'agony', 
'altar', 
'angel', 
'art', 
'battle',
'breastplate', 
'chariot', 
'crown', 
'dark', 
'day', 
'death', 
'demon'
'destroyer', 
'earth', 
'face', 
'fire', 
'forehead', 
'furnace', 
'god', 
'gold', 
'grass', 
'hair', 
'hand', 
'head', 
'horn', 
'horse', 
'hour', 
'human', 
'idol', 
'immorality', 
'injury', 
'key', 
'king', 
'lion', 
'locust', 
'mankind', 
'month', 
'mouth', 
'name', 
'number', 
'past', 
'person', 
'plague', 
'plant', 
'power', 
'rider', 
'river', 
'rose', 
'scorpion', 
'seal', 
'shaft', 
'sky', 
'smoke', 
'snake', 
'sound', 
'star', 
'stinger', 
'stone', 
'sulfur', 
'sun', 
'tail', 
'tooth', 
'thief', 
'time', 
'torment', 
'torture', 
'tree', 
'troop', 
'trumpet', 
'vision', 
'voice', 
'wing', 
'woe', 
'woman', 
'wood', 
'year'
]

subjectPlur=["angels",
"crowns",
"fires",
"demons",
"deaths",
"goats",
"horses",
"lions",
"locusts",
"mouths",
"plagues",
"rivers",
"scorpions",
"serpents",
"stars",
"suns",
"trees",
"trumpets",
"smells",
"they",
"you",
'abysses', 
'agonies', 
'altars', 
'angels', 
'art', 
'battles',
'breastplates', 
'chariots', 
'crowns', 
'dark', 
'days', 
'deaths', 
'demons',
'destroyers', 
'earth', 
'faces', 
'fires', 
'foreheads', 
'furnaces', 
'gods', 
'gold', 
'grasses', 
'hairs', 
'hands', 
'heads', 
'horns', 
'horses', 
'hours', 
'humans', 
'idols', 
'immorality', 
'injuries', 
'keys', 
'kings', 
'lions', 
'locusts', 
'mankind', 
'months', 
'mouths', 
'names', 
'numbers', 
'pasts', 
'people', 
'plagues', 
'plants', 
'powers', 
'riders', 
'rivers', 
'roses', 
'scorpions', 
'seals', 
'shafts', 
'skies', 
'smoke', 
'snakes', 
'sounds', 
'stars', 
'stingers', 
'stones', 
'sulfur', 
'suns', 
'tails', 
'teeth', 
'thieves', 
'time', 
'torments', 
'tortures', 
'trees', 
'troops', 
'trumpets', 
'visions', 
'voices', 
'wings', 
'woes', 
'women', 
'woods', 
'years'
]

verbSing=["feels",
"hears",
"kills",
"sees",
"smells",
"releases",
"rushes",
"rises",
"strikes",
'comes to', 
'cannot be',  
'did', 
'dies', 
'eludes', 
'finds', 
'gives', 
'harms', 
'has', 
'hears', 
'inflicts', 
'is', 
'keeps', 
'kills', 
'likes', 
'looks',
'murders', 
'releases', 
'repents', 
'resembles', 
'rests', 
'rushes', 
'said', 
'saw', 
'sees', 
'seeks', 
'sounds', 
'stills', 
'stings', 
'stops', 
'strikes',
'suffesr', 
'tells', 
'torments', 
'tortures', 
'walks', 
'was', 
'will', 
'wears', 
'works', 
'worships'         
]

verbPlur=["feel",
"hear",
"kill",
"see",
"smell",
"release",
"rush",
"rise",
"strike",
'are', 
'came to', 
'cannot be', 
'come to', 
'did', 
'die', 
'elude', 
'find', 
'give', 
'harm', 
'have', 
'hear', 
'inflict', 
'kept', 
'kill', 
'like', 
'looked',
'murder', 
'release', 
'repent', 
'resemble', 
'rest', 
'rush', 
'said', 
'saw', 
'see', 
'seek', 
'sounded', 
'stilled', 
'sting', 
'stop', 
'strike',
'suffer', 
'told', 
'torment', 
'torture', 
'walk', 
'were', 
'will', 
'wore', 
'work', 
'worship' 
]

verbCond=["can feel",
"can hear",
"can kill",
"can release",
"can see",
"can smell",
"can rush",
"can rise",
"can strike",
"will feel",
"will hear",
"will kill",
"will release",
"will see",
"will smell",
"will rush",
"will rise",
"will strike",
'will come to', 
'will die', 
'will elude', 
'will find', 
'will give', 
'will harm', 
'will have', 
'will hear', 
'will inflict', 
'will keep', 
'will kill', 
'will like', 
'will look',
'will murder', 
'will release', 
'will repent', 
'will resemble', 
'will rest', 
'will rush', 
'will say', 
'will see', 
'will seek', 
'will sound', 
'will still', 
'will sting', 
'will stop', 
'will strike',
'will suffer', 
'will tell', 
'will torment', 
'will torture', 
'will walk', 
'will wear', 
'will work', 
'will worship',
'can come to', 
'can do',
'can die', 
'can elude', 
'can find', 
'can give', 
'can have', 
'can harm', 
'can hear', 
'can inflict', 
'can be',
'can keep', 
'can kill', 
'can like', 
'can look',
'can murder', 
'can release', 
'can repent', 
'can resemble', 
'can rest', 
'can rush', 
'can say', 
'can see', 
'can seek', 
'can sound', 
'can still', 
'can sting', 
'can stop', 
'can strike',
'can suffer', 
'can tell', 
'can torment', 
'can torture', 
'can walk', 
'cam will', 
'can wear', 
'can work', 
'can worship', 
]

adjective=["blue",
"golden",
"red",
"rising",
"rushing",
"sunny",
'allowed', 
'blue', 
'bound', 
'bronze', 
'dark', 
'darkened', 
'fallen', 
'fiery', 
'fifth', 
'first', 
'five', 
'four', 
'gigantic', 
'golden', 
'great', 
'iron', 
'long', 
'magic', 
'many', 
'mounted', 
'opened', 
'prepared', 
'red', 
'sexual', 
'silver', 
'sixth', 
'ten', 
'third', 
'three', 
'thundering', 
'two', 
'yellow'           
]

objectSing=["angel",
"crown",
"earth",
"lion",
"fire",
"demon",
"death",
"goat",
"horse",
"locust",
"mouth",
"plague",
"river",
"scorpion",
"serpent",
"star",
"sun",
"tree",
"trumpet",
"smell",
'abyss', 
'agony', 
'altar', 
'angel', 
'art', 
'battle',
'breastplate', 
'chariot', 
'crown', 
'dark', 
'day', 
'death', 
'demon'
'destroyer', 
'earth', 
'face', 
'fire', 
'forehead', 
'furnace', 
'god', 
'gold', 
'grass', 
'hair', 
'hand', 
'head', 
'horn', 
'horse', 
'hour', 
'human', 
'idol', 
'immorality', 
'injury', 
'key', 
'king', 
'lion', 
'locust', 
'mankind', 
'month', 
'mouth', 
'name', 
'number', 
'past', 
'person', 
'plague', 
'plant', 
'power', 
'rider', 
'river', 
'rose', 
'scorpion', 
'seal', 
'shaft', 
'sky', 
'smoke', 
'snake', 
'sound', 
'star', 
'stinger', 
'stone', 
'sulfur', 
'sun', 
'tail', 
'tooth', 
'thief', 
'time', 
'torment', 
'torture', 
'tree', 
'troop', 
'trumpet', 
'vision', 
'voice', 
'wing', 
'woe', 
'woman', 
'wood', 
'year'
]

objectPlur=["angels",
"crowns",
"fires",
"demons",
"deaths",
"goats",
"horses",
"lions",
"locusts",
"mouths",
"plagues",
"rivers",
"scorpions",
"serpents",
"stars",
"suns",
"trees",
"trumpets",
"smells",
"angels",
"crowns",
"fires",
"demons",
"deaths",
"goats",
"horses",
"lions",
"locusts",
"mouths",
"plagues",
"rivers",
"scorpions",
"serpents",
"stars",
"suns",
"trees",
"trumpets",
"smells",
"they",
"you",
'abysses', 
'agonies', 
'altars', 
'angels', 
'art', 
'battles',
'breastplates', 
'chariots', 
'crowns', 
'dark', 
'days', 
'deaths', 
'demons'
'destroyers', 
'earth', 
'faces', 
'fires', 
'foreheads', 
'furnaces', 
'gods', 
'gold', 
'grasses', 
'hairs', 
'hands', 
'heads', 
'horns', 
'horses', 
'hours', 
'humans', 
'idols', 
'immorality', 
'injuries', 
'keys', 
'kings', 
'lions', 
'locusts', 
'mankind', 
'months', 
'mouths', 
'names', 
'numbers', 
'pasts', 
'people', 
'plagues', 
'plants', 
'powers', 
'riders', 
'rivers', 
'roses', 
'scorpions', 
'seals', 
'shafts', 
'skies', 
'smoke', 
'snakes', 
'sounds', 
'stars', 
'stingers', 
'stones', 
'sulfur', 
'suns', 
'tails', 
'teeth', 
'thieves', 
'time', 
'torments', 
'tortures', 
'trees', 
'troops', 
'trumpets', 
'visions', 
'voices', 
'wings', 
'woes', 
'women', 
'woods', 
'years'
]

articleSing=["the","this"]

articlePlur=["the"]

adverb=[
'now',
'soon',
'before', 
'down', 
'out', 
'over',
'very', 
]

conjunction=[
'and',
'and',
'and,'
'or',
'or']

sentences=[
["Sp", "Vc", "As", "Os"],       
["Sp", "Vp", "Ap", "Aj", "Op"],
["Sp", "Vc", "Ap", "Op", "Aj"],
["Sp", "Vc", "As", "Os", "Vs", "Av"],
["Sp", "Vp", "Op"],
["Sp", "Av", "Vc"],
["Sp", "Vp", "Aj", "Op"],
["Sp", "Vp", "Op", "An", "Op"],
["Sp", "Vp", "Op"],
["Sp", "Vc", "Op"],
["Sp", "Vp", "Ap", "Op", "Vp"],
["Sp", "Cn", "Sp", "Vc"],
["Sp", "Sp", "An", "Sp", "Al", "Vp"],
["Sp", "Vp", "Ap", "Aj", "Op"],
["Sp", "Vc", "As", "Os", "Aj"],
["Sp", "Vc", "As", "Aj", "Op"],
["Sp", "Vp", "Av"],
["As", "Ss", "Ap", "Sp", "Vp", "Aj"],
["As", "Ss", "Vc"],
["Av", "Sp", "Vc"],
["Av", "As", "Ss", "Av", "As", "Ss"],
["Av", "Sp", "Vc", "Aj"]]

def Ss():
    #get singular subject
    word=pickWord(subjectSing)
    return(word)

def Sp():
    #get plural subject
    word=pickWord(subjectPlur)
    return(word)

def Vs():
    #get singular verb
    word=pickWord(verbSing)
    return(word)

def Vp():
    #get plural verb
    word=pickWord(verbPlur)
    return(word)

def Vc():
    #get conditional verb
    word=pickWord(verbCond)
    return(word)

def Aj():
    #get adjective
    word=pickWord(adjective)
    return(word)

def Os():
    #get singular object
    word=pickWord(objectSing)
    return(word)

def Op():
    #get plural object
    word=pickWord(objectPlur)
    return(word)

def As():
    #get singular article
    word=pickWord(articleSing)
    return(word)

def Ap():
    #get plural article
    word=pickWord(articlePlur)
    return(word)

def Av():
    #get adverb
    word=pickWord(adverb)
    return(word)

def Cn():
    #get conjunction
    word=pickWord(conjunction)
    return(word)

def Al():
    return("all")

def An():
    return("and")

def pickWord(wordList):
    #get a random word from whichever word list is sent in (e.g. subjectSing)
    return(random.choice(wordList))

def pickSentence():
    #get a sentence from the list of sentence prototypes
    theSentence = random.choice(sentences)
    return(theSentence)

def getWord(functionString): 
    #use the string notation of the sentence prototype as a named function call
    return(globals()[functionString]())

def constructProphesy():
    #the oracle speaks!
    theSentence=pickSentence()
    
    spacer = ''
    tabs= 7 - len(theSentence)
    for item in range(tabs):
        spacer = spacer + '      '

    theProphesy = ''
    for thisWord in theSentence:
        theProphesy = theProphesy + getWord(thisWord) + " "
        
    theProphesy = str(theSentence) + spacer + theProphesy #uncomment to see expanded string for debugging
    return(theProphesy)

for i in range(15):
    print(constructProphesy())
